version: 2.1

orbs:
  rok8s-scripts: fairwinds/rok8s-scripts@11.0.1

references:
  set_environment_variables: &set_environment_variables
    run:
      name: Set Environment Variables
      command: |
        echo 'export REPO=quay.io/fairwinds/astro' >> ${BASH_ENV}
        echo 'export GO111MODULE=on' >> ${BASH_ENV}
        echo 'export CI_SHA1=$CIRCLE_SHA1' >> ${BASH_ENV}
        echo 'export CI_BRANCH=$CIRCLE_BRANCH' >> ${BASH_ENV}
        echo 'export CI_BUILD_NUM=$CIRCLE_BUILD_NUM' >> ${BASH_ENV}
        echo 'export CI_TAG=$CIRCLE_TAG' >> ${BASH_ENV}
        echo 'export PUSH_ALL_VERSION_TAGS=true' >> ${BASH_ENV}

  docker_build_and_push: &docker_build_and_push
    run:
      name: build and push
      command: |
        docker login quay.io -u="${fairwinds_quay_user}" -p="${fairwinds_quay_token}"
        docker-pull -f .circleci/build.config
        docker-build -f .circleci/build.config

        if [[ -z $CIRCLE_PR_NUMBER ]]; then
          docker-push -f .circleci/build.config
        else
          echo "Skipping docker push for forked PR"
        fi
  e2e_config: &e2e_config
    pre_script: e2e/pre.sh
    script: e2e/test.sh
    requires:
      - test
      - build
    filters:
      branches:
        only: /.*/
      tags:
        ignore: /v.*/

jobs:
  test:
    working_directory: /go/src/github.com/fairwindsops/astro
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - *set_environment_variables
      - run:
          name: lint
          command: |
            go get -u golang.org/x/lint/golint
            golint -set_exit_status ./... | tee golint-report.out
            test -z $(go fmt ./...)
      - run:
          name: test
          command: |
            go test -v --bench --benchmem -coverprofile=coverage.txt -covermode=atomic ./pkg/...
            go vet 2> govet-report.out
            go tool cover -html=coverage.txt -o cover-report.html
      - run: bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN

  build:
    docker:
      - image: quay.io/reactiveops/ci-images:v9.4-alpine
    steps:
      - checkout
      - setup_remote_docker
      - *set_environment_variables
      - *docker_build_and_push

  release:
    docker:
      - image: circleci/golang:1.12
        environment:
          GO111MODULE: "on"
    steps:
      - checkout
      - setup_remote_docker
      - run: curl -sL http://git.io/goreleaser | bash


workflows:
  version: 2
  test_and_build:
    jobs:
      - test
      - rok8s-scripts/kubernetes_e2e_tests:
          name: e2e test kube 1.15.7
          kind_node_image: >-
            "kindest/node:v1.15.7@sha256:e2df133f80ef633c53c0200114fce2ed5e1f6947477dbc83261a6a921169488d"
          <<: *e2e_config
      - rok8s-scripts/kubernetes_e2e_tests:
          name: e2e test kube 1.16.4
          kind_node_image: >-
            "kindest/node:v1.16.4@sha256:b91a2c2317a000f3a783489dfb755064177dbc3a0b2f4147d50f04825d016f55"
          <<: *e2e_config
      - rok8s-scripts/kubernetes_e2e_tests:
          name: e2e test kube 1.17.0
          kind_node_image: >-
            "kindest/node:v1.17.0@sha256:9512edae126da271b66b990b6fff768fbb7cd786c7d39e86bdf55906352fdf62"
          <<: *e2e_config
      - build:
          context: org-global
          requires:
            - test
          filters:
            branches:
              only: /.*/
            tags:
              ignore: /v.*/
  release:
    jobs:
      - test:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
      - build:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
      - release:
          context: org-global
          requires:
            - test
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
