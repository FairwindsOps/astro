version: 2

references:
  set_environment_variables: &set_environment_variables
    run:
      name: Set Environment Variables
      command: |
        echo 'export REPO=quay.io/reactiveops/dd-manager' >> ${BASH_ENV}
        echo 'export GO111MODULE=on' >> ${BASH_ENV}
        echo 'export CI_SHA1=$CIRCLE_SHA1' >> ${BASH_ENV}
        echo 'export CI_BRANCH=$CIRCLE_BRANCH' >> ${BASH_ENV}
        echo 'export CI_BUILD_NUM=$CIRCLE_BUILD_NUM' >> ${BASH_ENV}
        echo 'export CI_TAG=$CIRCLE_TAG' >> ${BASH_ENV}
        echo 'export PUSH_ALL_VERSION_TAGS=true' >> ${BASH_ENV}

  docker_build_and_push: &docker_build_and_push
    run:
      name: build and push
      command: |
        docker login quay.io -u="reactiveops+circleci" -p="${quay_token}"
        docker-pull -f .circleci/build.config
        docker-build -f .circleci/build.config

        if [[ -z $CIRCLE_PR_NUMBER ]]; then
          docker-push -f .circleci/build.config
        else
          echo "Skipping docker push for forked PR"
        fi

jobs:
  test:
    working_directory: /go/src/github.com/fairwindsops/dd-manager
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - *set_environment_variables
      - run:
          name: lint
          command: |
            go get -u golang.org/x/lint/golint
            golint -set_exit_status ./... | tee golint-report.out
            test -z $(go fmt ./...)
      - run:
          name: test
          command: |
            go test -v --bench --benchmem -coverprofile=coverage.txt -covermode=atomic ./pkg/...
            go vet 2> govet-report.out
            go tool cover -html=coverage.txt -o cover-report.html
      - run: bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN

  build:
    docker:
      - image: quay.io/reactiveops/ci-images:v8.0-alpine
    steps:
      - checkout
      - setup_remote_docker
      - *set_environment_variables
      - *docker_build_and_push


workflows:
  version: 2
  build:
    jobs:
      - test
      - build:
          context: org-global
          requires:
            - test
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
